rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reports collection - write-once by authenticated users
    match /reports/{reportId} {
      // Only authenticated users can create reports
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.reporterUID &&
        request.resource.data.keys().hasAll(['reporterUID', 'reportedUID', 'reason', 'timestamp']);
      
      // Reports cannot be read by regular users (only admin/Shadow Council)
      allow read: if false;
      
      // Reports cannot be updated or deleted by regular users
      allow update, delete: if false;
    }
    
    // Sessions collection for Integration reflections
    match /sessions/{sessionId} {
      // Only allow read if user is one of the participants
      allow read: if request.auth != null && (
        request.auth.uid in resource.data.participants ||
        // Allow read during creation if participants field doesn't exist yet
        !("participants" in resource.data)
      );
      
      // Allow write only if:
      // 1. Creating a new session and user is authenticated
      // 2. User is one of the existing participants
      allow write: if request.auth != null && (
        // Creating new session
        (!exists(/databases/$(database)/documents/sessions/$(sessionId)) && 
         request.auth.uid in request.resource.data.participants) ||
        // Updating existing session where user is a participant
        (exists(/databases/$(database)/documents/sessions/$(sessionId)) && 
         request.auth.uid in resource.data.participants)
      );
      
      // Reflections subcollection
      match /reflections/{userId} {
        // Only participants can read reflections
        allow read: if request.auth != null && 
          request.auth.uid in get(/databases/$(database)/documents/sessions/$(sessionId)).data.participants;
        
        // Users can only write their own reflection and must be a participant
        allow write: if request.auth != null && 
          request.auth.uid == userId &&
          request.auth.uid in get(/databases/$(database)/documents/sessions/$(sessionId)).data.participants;
      }
    }
  }
}