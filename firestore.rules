rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Reports collection - write-once by authenticated users
    match /reports/{reportId} {
      // Only authenticated users can create reports
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.reporterUID &&
        request.resource.data.keys().hasAll(['reporterUID', 'reportedUID', 'reason', 'timestamp']);
      
      // Reports cannot be read by regular users (only admin/Shadow Council)
      allow read: if false;
      
      // Reports cannot be updated or deleted by regular users
      allow update, delete: if false;
    }
    
    // Sessions collection for Integration reflections
    match /sessions/{sessionId} {
      // Allow read if:
      // 1. User is authenticated (sessions are not sensitive without reflections)
      // 2. This allows users to check if session exists
      allow read: if request.auth != null;
      
      // Allow write if:
      // 1. Creating a new session (any authenticated user can create)
      // 2. Adding themselves to participants array via arrayUnion
      allow write: if request.auth != null && (
        // Creating new session
        !exists(/databases/$(database)/documents/sessions/$(sessionId)) ||
        // Updating to add self to participants (using arrayUnion)
        (exists(/databases/$(database)/documents/sessions/$(sessionId)) &&
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['participants']) &&
         request.auth.uid in request.resource.data.participants)
      );
      
      // Reflections subcollection
      match /reflections/{userId} {
        // Allow read if:
        // 1. User has written a reflection in this session (proves participation)
        // 2. User is reading their own reflection
        allow read: if request.auth != null && (
          exists(/databases/$(database)/documents/sessions/$(sessionId)/reflections/$(request.auth.uid)) ||
          request.auth.uid == userId
        );
        
        // Users can only write their own reflection
        // This is safe because:
        // 1. They must have the session ID (from their pending integration)
        // 2. They can only write to their own userId document
        // 3. Session IDs are UUIDs, impossible to guess
        allow write: if request.auth != null && 
          request.auth.uid == userId;
      }
    }
  }
}